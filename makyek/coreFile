% run: idlv coreLogic  --filter=move/3 | wasp

% facts:
% enemy(I,J).
% computer(P,I,J)
% free(I,J)

% asp core logic file
move(P, I, J) | notMove(P, I, J) :- canMove(P, I, J).

% you can move if is free and can move in one of four direction
%direction 1
canMove(P, I, J) :- computer(P, I1, J1), free(I, J), I=I1, J=J1+2.
%direction 2
canMove(P, I, J) :- computer(P, I1, J1), free(I, J), I=I1+2, J=J1.
%direction 3
canMove(P, I, J) :- computer(P, I1, J1), free(I, J), I=I1, J=J1-2.
%direction 4
canMove(P, I, J) :- computer(P, I1, J1), free(I, J), I=I1-3, J=J1.

%number of eat elements
%eat(N, P, I, J) :- computer(P,_,_), move(P, I, J)
enemy(0,0).enemy(0,1).enemy(0,2).enemy(0,3).enemy(0,4).enemy(0,5).enemy(0,6).enemy(0,7).free(1,0).free(1,1).free(1,2).free(1,3).free(1,4).free(1,5).free(1,6).free(1,7).enemy(2,0).enemy(2,1).free(2,2).enemy(2,3).enemy(2,4).enemy(2,5).enemy(2,6).enemy(2,7).free(3,0).free(3,1).enemy(3,2).free(3,3).free(3,4).free(3,5).free(3,6).free(3,7).free(4,0).free(4,1).free(4,2).free(4,3).free(4,4).free(4,5).free(4,6).free(4,7).computer(40,5,0).computer(41,5,1).computer(42,5,2).computer(43,5,3).computer(44,5,4).computer(45,5,5).computer(46,5,6).computer(47,5,7).free(6,0).free(6,1).free(6,2).free(6,3).free(6,4).free(6,5).free(6,6).free(6,7).computer(56,7,0).computer(57,7,1).computer(58,7,2).computer(59,7,3).computer(60,7,4).computer(61,7,5).computer(62,7,6).computer(63,7,7).